<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:myname="http://www.lexueba.com/schema/user"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.lexueba.com/schema/user http://www.lexueba.com/schema/user.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	<description>sss</description>
	<!--<bean id="myTestBean" class="domain.MyTestBean" />-->
	<!--<bean  class="domain.MyTestBean" >
		<meta key="testStr" value="123"/>
	</bean>-->

	<!--<import resource="beanFactoryTest1.xml" />-->

	<bean id="bean2"  class="domain.MyTestBean">
		<property name="testStr">
			<value>xxq</value>
		</property>
	</bean>


		<bean id="myTestBean" name="bean3" class="domain.MyTestBean3">
			<property name="name">
				<value>${bean.name}</value>
			</property>
			<property name="myTestBean">
				<ref bean="bean2"/>
			</property>
		</bean>

	<bean id="mesHandle" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>bean.properties</value>
			</list>
		</property>
	</bean>
<!--	<bean class="domain.MyTestBean3">-->
<!--	</bean>-->


<!--	<bean id="myTestBeanQulifier" class="domain.MyTestBean">-->
<!--		<qualifier type="org.springframework.beans.factory.annotation.Qualifier" value="qf"/>-->
<!--	</bean>-->

<!--	<myname:user id="testBean" userName="aaa" email="bbb"/>-->

	<bean id="testFactoryBean" class="test.factorybean.FactoryBeanTest" />

	<bean id="userMapper1" class="test.six.five.two.UserMapper">
		<property name="dataValue">
			<value>2013-03-15</value>
		</property>
	</bean>

	<bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="customEditors">
			<map>
				<entry key="java.util.Date">
					<value type="java.lang.Class">test.six.five.two.propertyeditor.DatePropertyEditor</value>
				</entry>
			</map>
		</property>
	</bean>

	<bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="propertyEditorRegistrars">
			<list>
				<bean class="test.six.five.two.propertyeditor.DatePropertyEditorRegistrar"/>
			</list>
		</property>
	</bean>

	<bean id="simplePostProcessor" class="test.six.six.SimplePostProcessor">
		<property name="connectionString" value="bollocks"/>
		<property name="password" value="imaginecup" />
		<property name="username" value="Microsoft"/>
	</bean>

	<bean id="beanfactoryPostProcessor1" class="test.six.six.ObscenityRemovingBeanFactoryPostProcessor">
		<property name="obscenties">
			<set>
				<value>bollocks</value>
				<value>winky</value>
				<value>bum</value>
				<value>Microsoft</value>
			</set>
		</property>
	</bean>

	<bean id="post1" class="test.six.six.MyBeanPostProcessor"/>
	<bean id="post2" class="test.six.six.MyBeanPostProcessor2"/>
	<bean id="post3" class="test.six.six.MyBeanPostProcessor3"/>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages.messages</value>
			</list>
		</property>
	</bean>

	<bean id="testListener" class="test.six.six.chapter4.TestListener"/>



	<bean id="testBean" class="test.seven.chapter1.TestBean"/>
	<bean id="aspectBean" class="test.seven.chapter1.AspectJTest"/>

	<bean id="testLogAspect" class="test.seven.chapter1.TestLogAspect"/>

	<aop:config>
		<!--配置切面指定类-->
		<aop:aspect id="logAdvice" ref="testLogAspect">
			<!--配置切面指定类的方法及要切入的类的方法（切入点）-->

			<aop:pointcut id="pt1" expression="execution(* test.*.chapter1.*.test(..))"></aop:pointcut>
			<aop:before method="test" pointcut-ref="pt1" />
		</aop:aspect>

	</aop:config>
	<aop:aspectj-autoproxy/>
	<!--会对所有bean进行代理-->
<!--	<bean id="myProxyCreator" class="test.seven.chapter1.MyProxyCreator"/>-->
	<!--
	https://www.cnblogs.com/wade-luffy/p/6078446.html
	http://www.mamicode.com/info-detail-1613523.html
	-->
	<!--<context:load-time-weaver/>-->

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<!--<property name="url" value="jdbc:mysql://localhost:3306/xxqDb?serverTimezone=UTC"/>-->
		<property name="url" value="jdbc:mysql://192.168.137.200:3306/springJdbc?serverTimezone=UTC"/>
		<property name="username" value="root"/>
		<property name="password" value="root"/>
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="1"/>
		<!-- 连接池的最大值 -->
		<property name="maxTotal" value="300"/>
		<!-- 最大空闲值 -->
		<property name="maxIdle" value="2"/>

		<!-- 最小空闲值 -->
		<property name="minIdle" value="1"/>
	</bean>

	<bean id="userService" class="test.springsource.eight.service.UserServiceImpl">
<!--		 注入数据源-->
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="userDao" class="test.springsource.eight.dao.UserDao">
		<property name="dataSource" ref="dataSource"/>
	</bean>
<!--	<bean name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
<!--		<constructor-arg index="0" ref="dataSource"/>-->
<!--	</bean>-->

<!--	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
<!--		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>-->
<!--		<property name="dataSource" ref="dataSource"/>-->
<!--	</bean>-->

<!--	<bean id="userMapper1" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
<!--		<property name="mapperInterface" value="test.springsource.nine.mapper.UserMapper"/>-->
<!--		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
<!--	</bean>-->

	<!-- scan 会将注解扫描器注册进来 -->
<!--	<bean class= "org.mybatis.spring.mapper.MapperScannerConfigurer">-->
<!--		<property name="basePackage" value="${basePackage}"/>-->
<!--		<property name="processPropertyPlaceHolders" value="true"/>-->
<!--	</bean>-->

	<bean id="transactionManager1" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager1"/>

<!--	<bean id="dynamicDataSource" class="test.springsource.ten.DynamicDataSource">-->
<!--		<property name="targetDataSources">-->
<!--			<map key-type="java.lang.String" value-type="javax.sql.DataSource">-->
<!--				<entry key="test1" value-ref="dataSource"/>-->

<!--			</map>-->
<!--		</property>-->
<!--	</bean>-->
</beans>