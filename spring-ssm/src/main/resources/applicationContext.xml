<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	   xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

<!--	&lt;!&ndash; 组件扫描 &ndash;&gt;-->
<!--	<context:component-scan base-package="com.gc">-->
<!--		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
<!--	</context:component-scan>-->

<!--	&lt;!&ndash;    引入配置文件&ndash;&gt;-->
<!--	<context:property-placeholder location="classpath:jdbc.properties"/>-->
<!--	&lt;!&ndash; 连接池 &ndash;&gt;-->
<!--	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
<!--		<property name="driverClass" value="${jdbc.driverClass}"></property>-->
<!--		<property name="jdbcUrl" value="${jdbc.url}"></property>-->
<!--		<property name="user" value="${jdbc.username}"></property>-->
<!--		<property name="password" value="${jdbc.password}"></property>-->
<!--	</bean>-->

<!--	&lt;!&ndash; 事务 &ndash;&gt;-->
<!--	<bean id="dataSourceTransactionManager"-->
<!--		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--		<property name="dataSource" ref="dataSource"></property>-->
<!--	</bean>-->
<!--	&lt;!&ndash;    开启事务&ndash;&gt;-->
<!--	<tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>-->

<!--	&lt;!&ndash;装配SqlSessionFactory&ndash;&gt;-->
<!--	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">-->
<!--		&lt;!&ndash; 指定数据源 &ndash;&gt;-->
<!--		<property name="dataSource" ref="dataSource"></property>-->
<!--		&lt;!&ndash; MyBatis的配置文件 &ndash;&gt;-->
<!--		<property name="configLocation"-->
<!--				  value="classpath:mybatis.xml"></property>-->
<!--		&lt;!&ndash; MyBatis的SQL映射文件 &ndash;&gt;-->
<!--		<property name="mapperLocations"-->
<!--				  value="classpath:com/gc/mapper/*.xml"></property>-->
<!--		&lt;!&ndash; 类型别名&ndash;&gt;-->
<!--		<property name="typeAliasesPackage"-->
<!--				  value="com.gc.bean"></property>-->
<!--	</bean>-->
<!--	&lt;!&ndash; Mapper接口-->
<!--        MapperScannerConfigurer 为指定包下的Mapper接口批量生成代理实现类.bean的默认id是接口名首字母小写.-->
<!--     &ndash;&gt;-->
<!--	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
<!--		<property name="basePackage" value="com.gc.mapper"></property>-->
<!--	</bean>-->

<!--	&lt;!&ndash; 扫描所有的mapper接口的实现，让这些mapper能够自动注入；-->
<!--    base-package：指定mapper接口的包名-->
<!--     &ndash;&gt;-->
<!--	<mybatis-spring:scan base-package="com.gc.mapper"/>-->

<!--	&lt;!&ndash;配置一个可以进行批量执行的sqlSession  &ndash;&gt;-->
<!--	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">-->
<!--		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>-->
<!--		<constructor-arg name="executorType" value="BATCH"></constructor-arg>-->
<!--	</bean>-->

	<!--    视图解析器-->
	<bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
</beans>